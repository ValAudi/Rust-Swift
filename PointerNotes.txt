Boxes are used to move data from the Stack to the heap and vice versa. 
To move data back to the stack you can deference a box. It is allowed.
To movve data to the heap you can box the data.

Boxes are ABI compatible for C

Box::into_raw(Box<T>) consumes the Box and returns a wrapped raw pointer.

There are two kinds of raw pointers in rust. *const T and *mut T. A constant
pointer and a mutable pointer but all raw pointers. 

Raw pointer need manual memory management. Always best to put them in a box 
and let the Box handle their deallocation. 

Cannot dereference a raw pointer. 

They have no onwership.

Just raw data on the heap hence the reason why we have to clean up the heap.

Immediately the data is passed over from one language to the other through the
heap allocation the heap space should be cleared. 

If the memory address the pointer is pointing to is deallocated too quickly 
we have a dangling pointer phenomena.

Raw pointer are useful for FFI 